export default {
  globals: {
    '@angular/animations': 'ng.animations',
    '@angular/common': 'ng.common',
    '@angular/compiler': 'ng.compiler',
    '@angular/core': 'ng.core',
    '@angular/forms': 'ng.forms',
    '@angular/http': 'ng.http',
    '@angular/platform-browser': 'ng.platformBrowser',
    '@angular/platform-browser-dynamic': 'ng.platformBrowserDynamic',
    '@angular/router': 'ng.router',
    'microedge-rxstate/dist': 'MicroedgeRxState',
    'moment': 'moment',
    'ng2-dragula/ng2-dragula': 'ng2.dragula',
    'rxjs/Observable': 'Rx',
    'rxjs/BehaviorSubject': 'Rx',
    'rxjs/ReplaySubject': 'Rx',
    'rxjs/Subject': 'Rx',
    'rxjs/Subscription': 'Rx',
    'rxjs/add/observable/combineLatest': 'Rx.Observable',
    'rxjs/add/observable/fromEvent': 'Rx.Observable',
    'rxjs/add/observable/of': 'Rx.Observable',
    'rxjs/add/operator/distinctUntilChanged': 'Rx.Observable.prototype',
    'rxjs/add/operator/filter': 'Rx.Observable.prototype',
    'rxjs/add/operator/map': 'Rx.Observable.prototype',
    'rxjs/add/operator/mergeMap': 'Rx.Observable.prototype',
    'rxjs/add/operator/skip': 'Rx.Observable.prototype',
    'rxjs/add/operator/takeUntil': 'Rx.Observable.prototype',
    'rxjs/add/operator/take': 'Rx.Observable.prototype'
  },
  external: [
    '@angular/animations',
    '@angular/common',
    '@angular/compiler',
    '@angular/core',
    '@angular/forms',
    '@angular/http',
    '@angular/platform-browser',
    '@angular/platform-browser-dynamic',
    '@angular/router',
    'microedge-rxstate/dist',
    'moment',
    'ng2-dragula/ng2-dragula',
    'rxjs/Observable',
    'rxjs/BehaviorSubject',
    'rxjs/ReplaySubject',
    'rxjs/Subject',
    'rxjs/Subscription',
    'rxjs/add/observable/combineLatest',
    'rxjs/add/observable/fromEvent',
    'rxjs/add/observable/of',
    'rxjs/add/operator/distinctUntilChanged',
    'rxjs/add/operator/filter',
    'rxjs/add/operator/map',
    'rxjs/add/operator/mergeMap',
    'rxjs/add/operator/skip',
    'rxjs/add/operator/takeUntil',
    'rxjs/add/operator/take'
  ]
};
